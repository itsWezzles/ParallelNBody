/** @file ExpKernel
 * @brief Implements the separable exponential kernel defined by
 * K(t,s) = exp(sum_i t_i - s_i)
 *
 * Note: Mostly for testing purposes.
 */

#include "numeric/Vec.hpp"

struct ExpPotential
{
  typedef Vec<3,double>  source_type;
  typedef double         charge_type;
  typedef Vec<3,double>  target_type;
  typedef double         result_type;
  typedef double         kernel_value_type;

  /** Kernel evaluation
   * K(t,s) = exp(sum_i t_i - s_i)
   */
  inline kernel_value_type operator()(const target_type& t,
                                      const source_type& s) const {
    return exp(t[0] + t[1] + t[2]
               - s[0] - s[1] - s[2]);
  }
  inline kernel_value_type transpose(const kernel_value_type& kts) const {
    return 1.0 / kts;
  }
};
